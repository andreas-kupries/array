## -*- tcl -*-
## (c) 2013 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## Test suite for phash::multi stores, common parts across implementations.
## Part II, cross-document operations. The per-document operations can be
## be tested via base.testsuite and a document instance opened from the multi.
#
## The external procedures 'already' and 'badmethod' are used to
## generate implementation specific error messages. Implementations
## have to be provided by the invoking implementation-specific
## testsuite.
#
## The external procedures 'new-store' and 'release-store' are used to
## create and destroy an instance of the store under test.

# ------------*----------------
# dispatch    | *
# destroy     | *
# ------------*----------------
# clear       | *
# get         | *
# getv        | *
# keys        | *
# names       | *
# size        | *
# unset       | *
# unsetv      | *
# ------------*----------------

# # ## ### ##### ######## ############# #####################
## dispatch

test [test-class]-dispatch-1.0 {instance, no method} -setup {
    new-store
} -body {
    test-multi-store
} -cleanup {
    release-store
} -returnCodes error \
    -result {wrong # args: should be "test-multi-store method ?arg ...?"}

test [test-class]-dispatch-1.1 {instance, bad method name} -setup {
    new-store
} -body {
    test-multi-store foo
} -cleanup {
    release-store
} -returnCodes error \
    -result [badmethod foo [multi-store-instc-methods]]

test [test-class]-dispatch-1.2 {class, bad method name} -setup {
    new-store
} -body {
    [info object class test-multi-store] foo
} -cleanup {
    release-store
} -returnCodes error \
    -result [badmethod foo [multi-store-class-methods]]

# # ## ### ##### ######## ############# #####################
## destructor

test [test-class]-destroy-1.0 {destroy, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store destroy X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store destroy"}

test [test-class]-destroy-1.1 {destroy} -setup {
    new-store
} -body {
    release-store
    info commands ::test-multi-store
} -result {}

# # ## ### ##### ######## ############# #####################
## clear - Across documents

test [test-class]-clear-1.0 {clear, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store clear S
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store clear"}

test [test-class]-clear-1.1 {clear, none} -setup {
    new-store
} -body {
    list [test-multi-store size] [test-multi-store clear] [test-multi-store size]
} -cleanup {
    release-store
} -result {0 {} 0}

test [test-class]-clear-1.2 {clear, some} -setup {
    new-store
    test-store setv S C
    test-store setv A R
    test-store setv R A
    test-store setv C S
} -body {
    list [test-multi-store size] [test-multi-store clear] [test-multi-store size]
} -cleanup {
    release-store
} -result {1 {} 0}

# # ## ### ##### ######## ############# #####################
## get - Across documents.

test [test-class]-get-1.0 {get, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store get P X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store get ?pattern?"}

test [test-class]-get-1.1 {get, nothing} -setup {
    new-store
} -body {
    test-multi-store get
} -cleanup {
    release-store
} -result {}

test [test-class]-get-1.2 {get, all} -setup {
    new-store
    test-store setv S C
    test-store setv A R
    test-store setv R A
    test-store setv C S
    test-doc-store   setv S U
    test-doc-store   setv O Z
    test-doc-store   setv R Y
    test-doc-store   setv A X
} -body {
    dict2sort [test-multi-store get]
} -cleanup {
    release-store
} -result {A {ABC R XYZ X} C {ABC S} O {XYZ Z} R {ABC A XYZ Y} S {ABC C XYZ U}}

test [test-class]-get-1.3 {get, some} -setup {
    new-store
    test-store setv S C
    test-store setv A R
    test-store setv R A
    test-store setv C S
    test-doc-store   setv S U
    test-doc-store   setv O Z
    test-doc-store   setv R Y
    test-doc-store   setv A X
} -body {
    dict2sort [test-multi-store get {[AR]}]
} -cleanup {
    release-store
} -result {A {ABC R XYZ X} R {ABC A XYZ Y}}

# # ## ### ##### ######## ############# #####################
## getv - Across documents

test [test-class]-getv-1.0 {getv, wrong#args, not enough} -setup {
    new-store
} -body {
    test-multi-store getv
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store getv key"}

test [test-class]-getv-1.1 {getv, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store getv S X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store getv key"}

test [test-class]-getv-1.2 {getv, unknown key} -setup {
    new-store
} -body {
    test-multi-store getv 0
} -cleanup {
    release-store
} -result {}

test [test-class]-getv-1.3 {getv, known, everywhere} -setup {
    new-store
    test-store setv S S
    test-doc-store   setv S A
} -body {
    kt dictsort [test-multi-store getv S]
} -cleanup {
    release-store
} -result {ABC S XYZ A}

test [test-class]-getv-1.4 {getv, known, partial} -setup {
    new-store
    test-store setv S C
    test-store setv A R
    test-store setv R A
    test-store setv C S
    test-doc-store   setv S A
} -body {
    test-multi-store getv A
} -cleanup {
    release-store
} -result {ABC R}

# # ## ### ##### ######## ############# #####################
## keys - Across documents

test [test-class]-keys-1.0 {keys, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store keys S X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store keys ?pattern?"}

test [test-class]-keys-1.1 {keys, none} -setup {
    new-store
} -body {
    test-multi-store keys
} -cleanup {
    release-store
} -result {}

test [test-class]-keys-1.2 {keys, all} -setup {
    new-store
    test-store setv S C
    test-store setv A R
    test-store setv R A
    test-store setv C S

    test-doc-store   setv S U
    test-doc-store   setv O Z
    test-doc-store   setv R Y
    test-doc-store   setv A X
} -body {
    lsort -dict [test-multi-store keys]
} -cleanup {
    release-store
} -result {A C O R S}

test [test-class]-keys-1.3 {keys, some} -setup {
    new-store
    test-store setv S C
    test-store setv A R
    test-store setv R A
    test-store setv C S

    test-doc-store   setv S U
    test-doc-store   setv O Z
    test-doc-store   setv R Y
    test-doc-store   setv A X
} -body {
    lsort -dict [test-multi-store keys {[AR]}]
} -cleanup {
    release-store
} -result {A R}

# # ## ### ##### ######## ############# #####################
## names - documents

test [test-class]-names-1.0 {names, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store names S X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store names ?pattern?"}

test [test-class]-names-1.1 {names, none} -setup {
    new-store
} -body {
    test-multi-store names
} -cleanup {
    release-store
} -result {}

test [test-class]-names-1.2 {names, all} -setup {
    new-store
    test-store setv S C
    test-doc-store   setv S U
} -body {
    lsort -dict [test-multi-store names]
} -cleanup {
    release-store
} -result {ABC XYZ}

test [test-class]-names-1.3 {names, some} -setup {
    new-store
    test-store setv S C
    test-doc-store   setv S U
} -body {
    lsort -dict [test-multi-store names {[AR]*}]
} -cleanup {
    release-store
} -result ABC

# # ## ### ##### ######## ############# #####################
## size - documents

test [test-class]-size-1.0 {size, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store size X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store size"}

test [test-class]-size-1.1 {size} -setup {
    new-store
    test-store setv A B
} -body {
    test-multi-store size
} -cleanup {
    release-store
} -result 1

test [test-class]-size-1.2 {size} -setup {
    new-store
    test-store setv A B
    test-doc-store   setv B C
} -body {
    test-multi-store size
} -cleanup {
    release-store
} -result 2

# # ## ### ##### ######## ############# #####################
## unset - Across documents

test [test-class]-unset-1.0 {unset, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store unset P X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store unset ?pattern?"}

test [test-class]-unset-1.1 {unset, partial} -setup {
    new-store
    test-store set {A B AX Z C R}
    test-doc-store   set {A Z D Q}
} -body {
    test-multi-store unset A*
    dict2sort [test-multi-store get]
} -cleanup {
    release-store
} -result {C {ABC R} D {XYZ Q}}

test [test-class]-unset-1.2 {unset, all} -setup {
    new-store
    test-store set {A B AX Z C R}
    test-doc-store   set {A Z D Q}
} -body {
    test-multi-store unset
    test-multi-store get
} -cleanup {
    release-store
} -result {}

# # ## ### ##### ######## ############# #####################
## unsetv

test [test-class]-unsetv-1.0 {unsetv, wrong#args, not enough} -setup {
    new-store
} -body {
    test-multi-store unsetv
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store unsetv key"}

test [test-class]-unsetv-1.1 {unsetv, wrong#args, too many} -setup {
    new-store
} -body {
    test-multi-store unsetv K X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-multi-store unsetv key"}

test [test-class]-unsetv-1.2 {unsetv, known} -setup {
    new-store
    test-store set {A B AX Z C R}
    test-doc-store   set {A Z D Q}
} -body {
    test-multi-store unsetv A
    dict2sort [test-multi-store get]
} -cleanup {
    release-store
} -result {AX {ABC Z} C {ABC R} D {XYZ Q}}

test [test-class]-unsetv-1.3 {unsetv, unknown} -setup {
    new-store
    test-store set {A B AX Z C R}
    test-doc-store   set {A Z D Q}
} -body {
    test-multi-store unsetv B
    dict2sort [test-multi-store get]
} -cleanup {
    release-store
} -result {A {ABC B XYZ Z} AX {ABC Z} C {ABC R} D {XYZ Q}}

# # ## ### ##### ######## ############# #####################
## export

test [test-class]-export-json-simple-1.0 {export wrong args, not enough} -setup {
    new-store
} -body {
    test-multi-store export
} -cleanup {
    release-store
} -returnCodes error -result "wrong # args: should be \"test-multi-store export format ...\""

# # ## ### ##### ######## ############# #####################
return
