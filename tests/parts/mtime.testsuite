## -*- tcl -*-
## (c) 2013 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## Test suite for phash::mtime stores, common parts across implementations.
#
## The external procedures 'already' and 'badmethod' are used to
## generate implementation specific error messages. Implementations
## have to be provided by the invoking implementation-specific
## testsuite.
#
## The external procedures 'new-store' and 'release-store' are used to
## create and destroy an instance of the store under test.

# # ## ### ##### ######## ############# #####################
## dispatch

test [test-class]-dispatch-1.1 {instance, bad method name} -setup {
    new-store
} -body {
    test-store foo
} -cleanup {
    release-store
} -returnCodes error \
    -result [badmethod foo {clear destroy exists get gett gettv getv names set setv size unset unsetv}]

# # ## ### ##### ######## ############# #####################
## gett

test [test-class]-gett-1.0 {gett, wrong#args, too many} -setup {
    new-store
} -body {
    test-store gett P X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-store gett ?pattern?"}

test [test-class]-gett-1.1 {gett, nothing} -setup {
    new-store
} -body {
    test-store gett
} -cleanup {
    release-store
} -result {}

test [test-class]-gett-1.2 {gett, all} -setup {
    new-store
    test-store setv S C 3
    test-store setv A R 4
    test-store setv R A 5
    test-store setv C S 6
} -body {
    kt dictsort [test-store gett]
} -cleanup {
    release-store
} -result {A 4 C 6 R 5 S 3}

test [test-class]-gett-1.3 {gett, some} -setup {
    new-store
    test-store setv S C 3
    test-store setv A R 4
    test-store setv R A 5
    test-store setv C S 6
} -body {
    kt dictsort [test-store gett {[AR]}]
} -cleanup {
    release-store
} -result {A 4 R 5}

# # ## ### ##### ######## ############# #####################
## gettv

test [test-class]-gettv-1.0 {gettv, wrong#args, not enough} -setup {
    new-store
} -body {
    test-store gettv
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-store gettv key"}

test [test-class]-gettv-1.1 {gettv, wrong#args, too many} -setup {
    new-store
} -body {
    test-store gettv S X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-store gettv key"}

test [test-class]-gettv-1.2 {gettv, unknown key} -setup {
    new-store
} -body {
    test-store gettv 0
} -cleanup {
    release-store
} -returnCodes error -result {Expected key, got "0"}

test [test-class]-gettv-1.3 {gettv, known} -setup {
    new-store
    test-store setv S S 7
} -body {
    test-store gettv S
} -cleanup {
    release-store
} -result 7

test [test-class]-gettv-1.4 {gettv, known} -setup {
    new-store
    test-store setv S C 3
    test-store setv A R 6
    test-store setv R A 9
    test-store setv C S 0
} -body {
    test-store gettv A
} -cleanup {
    release-store
} -result 6

# # ## ### ##### ######## ############# #####################
## setv

test [test-class]-setv-1.0 {setv, wrong#args, not enough} -setup {
    new-store
} -body {
    test-store setv
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-store setv key value ?time?"}

test [test-class]-setv-1.1 {setv, wrong#args, not enough} -setup {
    new-store
} -body {
    test-store setv K
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-store setv key value ?time?"}

test [test-class]-setv-1.2 {setv, wrong#args, too many} -setup {
    new-store
} -body {
    test-store setv K V T X
} -cleanup {
    release-store
} -returnCodes error -result {wrong # args: should be "test-store setv key value ?time?"}

test [test-class]-setv-1.5 {setv, explicit time} -setup {
    new-store
    set n [clock seconds]
} -body {
    test-store setv A B 5
    test-store gettv A
} -cleanup {
    release-store
} -result 5

test [test-class]-setv-1.6 {setv, bad time} -setup {
    new-store
} -body {
    test-store setv A B C
} -cleanup {
    release-store
} -returnCodes error -result {Expected a time, got "C"}

# # ## ### ##### ######## ############# #####################

kt source parts/core.testsuite

# # ## ### ##### ######## ############# #####################
return
